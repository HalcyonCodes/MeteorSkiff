
function delay(seconds)
    local start_time = os.clock()
    while os.clock() < start_time + seconds do
        -- 等待
    end
  end


q = "127.0.0.1"
s = "5016" --需要修改接口
c = "/api/v1/TradeData/GetLastFourTradeBuy?stockID=sz002602"--需要修改配置股票代码
r = curlGet(q, s, c);
--r = curlGet(q, s, c);
index = 0
price1 = 0
price2 = 0
price3 = 0
price4 = 0

for match in string.gmatch(r[2], '"Price":([^,]+)') do
    
    if index == 0 then
        price1 = tonumber(match)
    elseif index == 1 then
        price2 = tonumber(match)
    elseif index == 2 then
        price3 = tonumber(match)
    elseif index == 3 then
        price4 = tonumber(match)
    end
    index = index + 1;
end

k1 = price2 - price1;
k2 = price3 - price2;
k3 = price4 - price3;


--登录机器人服务器
q = "127.0.0.1"
s = "5036" --需要修改接口
c = "/api/v1/Account/Login"
z = "{\"userName\" : " .. "\"stringName\"" .. "," .. "\"password\": \"" .. "z12312" .. "\"}" --需要配置账号密码
--dbgPrint('sss')
r = curlPost(q, s, c ,z , "");
jwt = "";
for match in string.gmatch(r[2], '"Access_token":"(.-)"') do
 jwt = match;
end

--登录机股票服务器
q = "127.0.0.1"
s = "5016" --需要修改接口
c = "/api/v1/Account/Login"
z = "{\"userName\" : " .. "\"stringName\"" .. "," .. "\"password\": \"" .. "z12312" .. "\"}" --需要配置账号密码
--dbgPrint('sss')
r = curlPost(q, s, c ,z , "");
jwt2 = "";
for match in string.gmatch(r[2], '"Access_token":"(.-)"') do
 jwt2 = match;
end
--dbgPrint(jwt2)

--时线过波谷k1 <= 0 and k2 >= 0 and k3 >= 0
if k1 <= 0 and k2 >= 0 and k3 >= 0 then
    dbgPrint(SSS);
    --查看资金余额
    q = "127.0.0.1"
    s = "5016"                          --需要修改接口
    c = "/api/v1/Trade/GetCapital?id=1" --需要修改资金账户id
    r = curlGet(q, s, c);
    --dbgPrint(r[2])
    for match in string.gmatch(r[2], '"balance":([^,}]*)') do
        balance = tonumber(match)
        dbgPrint(balance)
    end
    balance = tonumber(balance);

    --计算资金消耗
    local pricePerShare = price4 
    local shares = 100 -- 1手（配置）

    -- 计算成交金额
    local totalAmount = pricePerShare * shares

    -- 定义佣金费率和最低佣金
    local commissionRate = 0.0003 -- 0.03%
    local minCommission = 5

    -- 计算佣金
    local commission = totalAmount * commissionRate
    if commission < minCommission then
        commission = minCommission
    end

    -- 定义过户费率和最低过户费
    local transferFeeRate = 0.0002 -- 0.02%
    local minTransferFee = 1

    -- 计算过户费
    local transferFee = totalAmount * transferFeeRate
    if transferFee < minTransferFee then
        transferFee = minTransferFee
    end

    -- 计算总手续费
    local totalFee = commission + transferFee

    --总费用
    totalFee = totalFee + totalAmount
    --dbgPrint("TITLE" .. totalFee)

    --买入 1手（配置）
    if balance >= totalFee then
        
        --下订单
        
        --设置买入手数
        q = "127.0.0.1"
        s = "5016"                                                                           --需要修改接口
        c = "/api/v1/Trade/AddStockHolding"
        --z = "{\"userName\" : " .. "\"stringName\"" .. "," .. "\"password\": \"" .. "z12312" .. "\"}" --需要配置账号密码
        z = [[{
            "stockHoldingID": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "stockID": "sz002602",]] .. -- 配置股票
            [["count": ]] .. 100 .. "," ..
            [["buyPrice":]].. price4 .. "}";

        --dbgPrint('sss')
        r = curlPost(q, s, c, z, jwt2);
        --dbgPrint(z)
        dbgPrint(r[1])
    

        --延时30秒后，检查是否成交，如果成交，则继续下一轮，如果未成交，则撤单，继续下一轮

        --更新资金余额
        balance = balance - totalFee
        q = "127.0.0.1"
        s = "5016"                        --需要修改接口
        c = "/api/v1/Trade/UpdateCapital" --需要修改资金账户id
        local capitalID = 1  -- 配置
        --local balance = totalFee               -- 假设balance是您想要包含的数值

        -- 构造JSON字符串
        z = "{\"capitalID\": " .. capitalID .. "," ..
            "\"balance\":" .. balance .. "}"

        r = curlPost(q, s, c, z, jwt2);

        dbgPrint(r[1])
    end
end
--时线过波顶
if k1 >= 0 and k2 < 0 and k3 < 0 then
    --查看持有余额
    --卖出
end




--延时60秒后，向主服务器发送查询股价订单请求
delay(60)


c = "/api/v1/Order/CreateOrderLite"

z = [[{
    "orderChannelLevel": 3,
    "order": {
      "orderID": "string",
      "orderService": {
        "orderServiceID": 1
      },
      "sourceTerminalID": "544aa3b5-fb4a-47db-bc4a-1b1eb6da3f82",
      "targetTerminalID": "544aa3b5-fb4a-47db-bc4a-1b1eb6da3f82",
      "orderServiceResources": [
        {
          "resourceIntValue": 0,
          "resourceStringValue": "sz002602",
          "resourceDoubleValue": 0.0
        }
      ]
    }
  }]]
  

  --r = curlPost(q, s, c ,z , jwt);
  --dbgPrint(r[1])